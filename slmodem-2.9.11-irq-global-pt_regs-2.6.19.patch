diff -NurpP --minimal slmodem-2.9.11-20061021.clean/drivers/amrmo_init.c slmodem-2.9.11-20061021.temp/drivers/amrmo_init.c
--- slmodem-2.9.11-20061021.clean/drivers/amrmo_init.c	2007-01-14 23:33:06.000000000 +0100
+++ slmodem-2.9.11-20061021.temp/drivers/amrmo_init.c	2007-01-15 11:37:59.000000000 +0100
@@ -501,7 +501,11 @@ static void amrmo_pci_interrupt(int irq,
 	amrmo_card_interrupt(amrmo->card);
 }
 #else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static irqreturn_t amrmo_pci_interrupt(int irq, void *dev_id)
+#else
 static irqreturn_t amrmo_pci_interrupt(int irq, void *dev_id, struct pt_regs *regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
         struct amrmo_struct *amrmo = (struct amrmo_struct *)dev_id;
 	amrmo_card_interrupt(amrmo->card);
diff -NurpP --minimal slmodem-2.9.11-20061021.clean/drivers/st7554.c slmodem-2.9.11-20061021.temp/drivers/st7554.c
--- slmodem-2.9.11-20061021.clean/drivers/st7554.c	2007-01-15 12:25:38.000000000 +0100
+++ slmodem-2.9.11-20061021.temp/drivers/st7554.c	2007-01-15 12:36:13.000000000 +0100
@@ -395,8 +395,11 @@ static int mo_init (struct st7554_state 
 
 /* ----------------------------------------------------------------------- */
 
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static void st7554_interrupt(struct urb *urb)
+#else
 static void st7554_interrupt(struct urb *urb, struct pt_regs* regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
 	struct st7554_state *s = urb->context;
 	u32 *status = urb->transfer_buffer;
@@ -436,8 +439,11 @@ static void st7554_interrupt(struct urb 
 
 /* --------------------------------------------------------------------- */
 
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static void mo_complete(struct urb *u)
+#else
 static void mo_complete(struct urb *u, struct pt_regs* regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
 	struct st7554_state *s = u->context;
 	struct dmabuf *db = &s->mo.dma;
@@ -495,23 +501,33 @@ static void mo_complete(struct urb *u, s
 	complete(&s->stop_comp);
 }
 
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static void mo_startup_complete(struct urb *u)
+#else
 static void mo_startup_complete(struct urb *u, struct pt_regs* regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
 	struct st7554_state *s = u->context;
 	USB_DBG("mo_startup_complete %d: %d: sent %d.\n",
 		MO_URB_NO(s,u), u->start_frame, u->actual_length);
 	FILL_DESC_OUT(s,&s->mo,u,BYTES_IN_FRAMES(s,DESCFRAMES));
 	u->complete = mo_complete;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+	mo_complete(u);
+#else
 	mo_complete(u,regs);
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 	complete(&s->start_comp);
 }
 
 
 /* ----------------------------------------------------------------------- */
 
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static void mi_complete(struct urb *u)
+#else
 static void mi_complete(struct urb *u, struct pt_regs* regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
 	struct st7554_state *s = u->context;
 	struct urb *next;
@@ -555,8 +571,11 @@ static void mi_complete(struct urb *u, s
 	complete(&s->stop_comp);
 }
 
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
+static void mi_startup_complete(struct urb *u)
+#else
 static void mi_startup_complete(struct urb *u, struct pt_regs* regs)
+#endif /* LINUX_VERSION_CODE >= 2.6.19 */
 {
 	struct st7554_state *s = u->context;
 	struct usb_iso_packet_descriptor *p;
